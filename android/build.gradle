buildscript {
  // Buildscript is evaluated before everything else so we can't use getExtOrDefault
  def kotlin_version = rootProject.ext.has("kotlinVersion") ? rootProject.ext.get("kotlinVersion") : project.properties["PdfAnnotation_kotlinVersion"]

  repositories {
    google()
    mavenCentral()
  }

  dependencies {
    classpath "com.android.tools.build:gradle:7.2.1"
    // noinspection DifferentKotlinGradleVersion
    classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
  }
}

plugins {
  id("org.jetbrains.kotlin.plugin.compose") version "2.0.0" // this version matches your Kotlin version
}

def reactNativeArchitectures() {
  def value = rootProject.getProperties().get("reactNativeArchitectures")
  return value ? value.split(",") : ["armeabi-v7a", "x86", "x86_64", "arm64-v8a"]
}

def isNewArchitectureEnabled() {
  return rootProject.hasProperty("newArchEnabled") && rootProject.getProperty("newArchEnabled") == "true"
}

apply plugin: "com.android.library"
apply plugin: "kotlin-android"

if (isNewArchitectureEnabled()) {
  apply plugin: "com.facebook.react"
}

def getExtOrDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : project.properties["PdfAnnotation_" + name]
}

def getExtOrIntegerDefault(name) {
  return rootProject.ext.has(name) ? rootProject.ext.get(name) : (project.properties["PdfAnnotation_" + name]).toInteger()
}

def supportsNamespace() {
  def parsed = com.android.Version.ANDROID_GRADLE_PLUGIN_VERSION.tokenize('.')
  def major = parsed[0].toInteger()
  def minor = parsed[1].toInteger()

  // Namespace support was added in 7.3.0
  return (major == 7 && minor >= 3) || major >= 8
}

android {
  if (supportsNamespace()) {
    namespace "com.pdfannotation"

    sourceSets {
      main {
        manifest.srcFile "src/main/AndroidManifestNew.xml"
      }
    }
  }

  compileSdkVersion getExtOrIntegerDefault("compileSdkVersion")

  defaultConfig {
    minSdkVersion getExtOrIntegerDefault("minSdkVersion")
    targetSdkVersion getExtOrIntegerDefault("targetSdkVersion")
    buildConfigField "boolean", "IS_NEW_ARCHITECTURE_ENABLED", isNewArchitectureEnabled().toString()

  }

  buildFeatures {
    buildConfig true
    compose true
  }

  composeOptions {
    kotlinCompilerExtensionVersion = getExtOrDefault("kotlinCompilerExtensionVersion")
  }

  buildTypes {
    release {
      consumerProguardFiles 'proguard-rules.pro'
    }
  }

  lintOptions {
    disable "GradleCompatible"
  }

  compileOptions {
    sourceCompatibility JavaVersion.VERSION_1_8
    targetCompatibility JavaVersion.VERSION_1_8
  }

  sourceSets {
    main {
      if (isNewArchitectureEnabled()) {
          java.srcDirs += [
            "generated/java",
            "generated/jni"
          ]
      }
    }
  }
}

repositories {
  mavenCentral()
  google()
}

def kotlin_version = getExtOrDefault("kotlinVersion")

dependencies {
  // For < 0.71, this will be from the local maven repo
  // For > 0.71, this will be replaced by `com.facebook.react:react-android:$version` by react gradle plugin
  //noinspection GradleDynamicVersion
  implementation "com.facebook.react:react-native:+"
  implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

  implementation(platform("androidx.compose:compose-bom:2024.12.01"))
  implementation("androidx.lifecycle:lifecycle-viewmodel-compose:2.8.7")

  implementation("androidx.compose.foundation:foundation:1.7.6")
  implementation("androidx.compose.foundation:foundation-layout:1.7.6")
  implementation("androidx.compose.runtime:runtime:1.7.6")
  implementation("net.engawapg.lib:zoomable:1.6.2")

  implementation("androidx.ink:ink-authoring:1.0.0-alpha03")
  implementation("androidx.ink:ink-brush:1.0.0-alpha03")
  implementation("androidx.ink:ink-geometry:1.0.0-alpha03")
  implementation("androidx.ink:ink-nativeloader:1.0.0-alpha03")
  implementation("androidx.ink:ink-rendering:1.0.0-alpha03")
  implementation("androidx.ink:ink-strokes:1.0.0-alpha03")
  implementation("androidx.input:input-motionprediction:1.0.0-beta05")
  implementation("com.google.code.gson:gson:2.10.1")
  implementation("androidx.graphics:graphics-shapes:1.0.1")
  implementation("androidx.graphics:graphics-core:1.0.3")
}

if (isNewArchitectureEnabled()) {
  react {
    jsRootDir = file("../src/")
    libraryName = "PdfAnnotationView"
    codegenJavaPackageName = "com.pdfannotation"
  }
}
